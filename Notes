We went in and gave the application a permission service that goes in and gives a USER AND ADMIN role. 
We created a Service annotation that let's Spring know it's not in an encapsulated state.
We created a getToken method that goes and retrieves the login information and compares it and returns and authentication.
Added the editUser parameter that gives the users their roles and if they can edit the users
Added the mode.addAttribute Permission to the controller to give the profiles the attributes and the permission service we established
for the users having roles and being able to edit the users. 

How many different roles can we give users?
What other services can we add to websites other than permissionService?

The app has changed relatively little but the functionality definitely has changed and makes it more of a serious application with 
and ADMIN that controls and can edit the user information and not everyone has access to editing the profiles except the ADMIN.

//Step 3 

We added authorization for the USER and the ADMIN. We gave them roles for who can view and edit what.
We also gave different default views for the User and Admin and what they see after they login
Created a contactCreate page so we can create contacts for the User
For the Admin it displays the USERS in the database

I would say the most confusing part about putting stuff together was understanding how the authorization needs to be 
placed in the files and how to give people different roles with different levels of authorization!

//Step 4

Added twitter and facebook integration with the contacts and users
Users can add their urls and twitter handles to their information and it links out
Admins can create new users and save them

